library(rvest)
library(magrittr)
library(XML)

stats.df.16.17 <- read.csv("~/Documents/shooting.16.17.csv",header=TRUE)

# 2017-18
url.17.18 <- "https://www.basketball-reference.com/leagues/NBA_2018_advanced.html"
webpage.17.18 <- read_html(url.17.18)
players.advanced.17.18 <- webpage.17.18 %>% html_nodes("table") %>% html_table %>% as.data.frame()

players.advanced.17.18 <- players.advanced.17.18[players.advanced.17.18$Player != "Player",]
players.advanced.17.18 <- players.advanced.17.18[!duplicated(players.advanced.17.18$Player),]
players.advanced.17.18$Pos[which(players.advanced.17.18$Pos == "PF-C")] <- "C"

player.html.17.18 <- webpage.17.18 %>% html_nodes("table") %>% html_nodes("tr") %>% html_nodes("td") %>% html_nodes("a")
player.html.unique.17.18 <- unique(player.html.17.18)
player.dictionary.17.18 <- as.character(player.html.17.18)
player.dictionary.17.18 <- unique(player.dictionary.17.18[grepl("players",player.dictionary.17.18)])
player.names.17.18 <- unlist(lapply(player.dictionary.17.18, function(x) unlist(strsplit(x,">"))[2]))
player.names.17.18 <- unlist(lapply(player.names.17.18, function(x) substr(x,1,nchar(x)-3)))

player.ids.17.18 <- unlist(lapply(player.dictionary.17.18, function(x) unlist(strsplit(x,"/"))[4]))
player.ids.17.18 <- unlist(lapply(player.ids.17.18, function(x) unlist(strsplit(x,"[.]"))[1]))

players.17.18 <- data.frame(player.names.17.18, player.ids.17.18)
players.17.18$player.ids <- as.character(players.17.18$player.ids)

player.urls.17.18 <- paste0("https://www.basketball-reference.com/players/",
                     substr(player.ids.17.18,1,1), "/",
                     player.ids.17.18,
                     ".html")


# 2017-18
rm(locations.df.17.18)
for (url in player.urls.17.18) {
    print(url)
    h <- read_html(url)
    totals <- h %>% html_nodes(xpath = '//comment()') %>%    # select comment nodes
        html_text() %>%    # extract comment text
        paste(collapse = '') %>%    # collapse to a single string
        read_html() %>%    # reparse to HTML
        html_node('table#totals') %>%    # select the desired table
        html_table()
    advanced <- h %>% html_nodes(xpath = '//comment()') %>%    # select comment nodes
        html_text() %>%    # extract comment text
        paste(collapse = '') %>%    # collapse to a single string
        read_html() %>%    # reparse to HTML
        html_node('table#advanced') %>%    # select the desired table
        html_table()
    shooting <- h %>% html_nodes(xpath = '//comment()') %>%    # select comment nodes
        html_text() %>%    # extract comment text
        paste(collapse = '') %>%    # collapse to a single string
        read_html() %>%    # reparse to HTML
        html_node('table#shooting') %>%    # select the desired table
        html_table()
    ftp.17.18.games.minutes <- totals[totals$Season == "2017-18",c("G","MP","FT%")][1,]
    ftr.17.18 <- advanced[advanced$Season == "2017-18",c("FTr")][1]
    shooting.17.18 <- shooting[shooting[,1] == "2017-18",c(11:15,17:21)][1,]
    colnames(shooting.17.18) <- c("perc.0.3","perc.3.10","perc.10.16","perc.16.3","perc.3",
                                  "0.3.perc","3.10.perc","10.16.perc","16.3.perc","3.perc")
    stats <- cbind(url,ftp.17.18.games.minutes,ftr.17.18,shooting.17.18)
    if(!exists("locations.df.17.18")) {
        locations.df.17.18 <- stats
    } else {
        locations.df.17.18 <- rbind(locations.df.17.18,stats)
    }
}

# 2017-18
locations.df.17.18$url <- as.character(locations.df.17.18$url)
locations.df.17.18$player.id <- substr(locations.df.17.18$url,48,nchar(locations.df.17.18$url)-5)
locations.df.17.18 <- merge(locations.df.17.18, players.17.18, by.x="player.id", by.y="player.ids")

stats.df.17.18 <- merge(players.advanced.17.18[,c("Player","Pos","TS.","USG.")],locations.df.17.18,by.x="Player",by.y="player.names.17.18")

for (i in c(3:4,7:20)) {
    stats.df.17.18[,i] <- as.numeric(stats.df.17.18[,i])
}

# Merge years
stats.df.16.18 <- merge(stats.df.16.17,stats.df.17.18,by="player.id")

stats.df.16.18$inc.ts.usg <- ifelse((stats.df.16.18$TS..y > stats.df.16.18$TS..x) &
                                    (stats.df.16.18$USG..y > stats.df.16.18$USG..x),1,0)
stats.df.16.18$diff.ts <- as.numeric(stats.df.16.18$TS..y) - as.numeric(stats.df.16.18$TS..x)
stats.df.16.18$diff.usg <- as.numeric(stats.df.16.18$USG..y) - as.numeric(stats.df.16.18$USG..x)

inc.ts.usg <- stats.df.16.18[stats.df.16.18$inc.ts.usg == 1,]

stats.df.16.18 <- stats.df.16.18[,-c(2)]

# Save Data-Frame
write.csv(stats.df.16.17, "./shooting.16.17.csv")
write.csv(stats.df.17.18, "./shooting.17.18.csv")
write.csv(stats.df.16.18, "./shooting.16.18.csv")
# Plot Function
plot.player <- function(player) {
    layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(7, 1))
    par(mai=c(0.5,1.0,1.5,0.5))
    league.pps <- 1.028
    position <- stats.df[stats.df$Player == player,"Pos"]
    p.s.perc <- as.numeric(stats.df[stats.df$Player == player,16:20])
    m.s.perc <- as.numeric(pos.medians[pos.medians$Position == position,10:14])
    s.perc <- t(data.frame(p.s.perc,m.s.perc))
    pps <- cbind(2*s.perc[,1:4],3*s.perc[,5])
    print(pps)
    colnames(pps) <- c("0-3","3-10","10-16","16<3","3")
    barplot(pps, col=c('#e41a1c','#377eb8'), beside=TRUE, main="Points Per Shot By Location",
            ylab="Points Per Shot")
    abline(h=1.028,col='Black',lty=2,lwd=2)
    box()

    p.perc.s <- as.numeric(stats.df[stats.df$Player == player,11:15])
    m.perc.s <- as.numeric(pos.medians[pos.medians$Position == position,5:9])
    perc.s <- t(data.frame(p.perc.s,m.perc.s))*100
    colnames(perc.s) <- c("0-3","3-10","10-16","16<3","3")
    barplot(perc.s, col=c('#e41a1c','#377eb8'), beside=TRUE,
            main="Proportion Of Shots By Location", ylab="Percent Of All Shots")
    mtext(player, side=3, outer=TRUE, line=-3, cex=2)
    box()
    par(mai=c(0,0,0,0))
    plot.new()
    legend(x="center", ncol=3, legend=c(player, paste0(position, " Median"),
                                        "League Average PPS"),
           col=c('#e41a1c','#377eb8',"Black"), lty=c(1,1,2), lwd=c(4,4,2))
}

player.yoy <- function(player) {
    layout(matrix(c(1,2,3,4,4,4), ncol=3, byrow=TRUE), heights=c(6, 1))
    par(mai=c(0.5,0.5,1.0,0.25))
    cols.16.17 <- c(4,5,10,9)
    cols.17.18 <- c(24,25,30,29)
    adv.16.17 <- as.numeric(stats.df.16.18[stats.df.16.18$Player.x == player,cols.16.17])
    adv.17.18 <- as.numeric(stats.df.16.18[stats.df.16.18$Player.x == player,cols.17.18])
    adv <- t(data.frame(adv.16.17,adv.17.18))
    adv[,c(1,3,4)] <- 100*adv[,c(1,3,4)]
      colnames(adv) <- c("TS%","USG%","FTR","FT%")
    barplot(adv, col=c('#e41a1c','#377eb8'), beside=TRUE,
            ylab="")
    mtext("Advanced Stats",side=3,line=1)
    box()
    league.pps <- 1.028
    s.perc.16.17 <- as.numeric(stats.df.16.18[stats.df.16.18$Player.x == player,16:20])
    s.perc.17.18 <- as.numeric(stats.df.16.18[stats.df.16.18$Player.x == player,36:40])
    s.perc <- t(data.frame(s.perc.16.17,s.perc.17.18))
    pps <- cbind(2*s.perc[,1:4],3*s.perc[,5])
    colnames(pps) <- c("0-3","3-10","10-16","16<3","3")
    barplot(pps, col=c('#e41a1c','#377eb8'), beside=TRUE,
            ylab="Points Per Shot", xlab="Shot Distance")
    mtext("Points Per Shot By Location",side=3,line=1)
    mtext(player,side=3,line=4,cex=2)
    abline(h=1.028,col='Black',lty=2,lwd=2)
    box()
    perc.s.16.17 <- as.numeric(stats.df.16.18[stats.df.16.18$Player.x == player,11:15])
    perc.s.17.18 <- as.numeric(stats.df.16.18[stats.df.16.18$Player.x == player,31:35])
    perc.s <- t(data.frame(perc.s.16.17,perc.s.17.18))*100
    colnames(perc.s) <- c("0-3","3-10","10-16","16<3","3")
    barplot(perc.s, col=c('#e41a1c','#377eb8'), beside=TRUE,
            ylab="Percent Of All Shots",
            xlab="Shot Distance")
    mtext("Proportion Of Shots By Location",side=3,line=1)
    box()
    par(mai=c(0,0,0,0))
    plot.new()
    legend(x="center", ncol=3, legend=c("2016-17", "2017-18",
                                        "League Average PPS"),
           col=c('#e41a1c','#377eb8',"Black"), lty=c(1,1,2), lwd=c(4,4,2))
}

## # 2016-17
## url.16.17 <- "https://www.basketball-reference.com/leagues/NBA_2017_advanced.html"
## webpage.16.17 <- read_html(url.16.17)
## players.advanced.16.17 <- webpage.16.17 %>% html_nodes("table") %>% html_table %>% as.data.frame()

## players.advanced.16.17 <- players.advanced.16.17[players.advanced.16.17$Player != "Player",]
## players.advanced.16.17 <- players.advanced.16.17[!duplicated(players.advanced.16.17$Player),]
## players.advanced.16.17$Pos[which(players.advanced.16.17$Pos == "PF-C")] <- "C"

## player.html.16.17 <- webpage.16.17 %>% html_nodes("table") %>% html_nodes("tr") %>% html_nodes("td") %>% html_nodes("a")
## player.html.unique.16.17 <- unique(player.html.16.17)
## player.dictionary.16.17 <- as.character(player.html.16.17)
## player.dictionary.16.17 <- unique(player.dictionary.16.17[grepl("players",player.dictionary.16.17)])
## player.names.16.17 <- unlist(lapply(player.dictionary.16.17, function(x) unlist(strsplit(x,">"))[2]))
## player.names.16.17 <- unlist(lapply(player.names.16.17, function(x) substr(x,1,nchar(x)-3)))

## player.ids.16.17 <- unlist(lapply(player.dictionary.16.17, function(x) unlist(strsplit(x,"/"))[4]))
## player.ids.16.17 <- unlist(lapply(player.ids.16.17, function(x) unlist(strsplit(x,"[.]"))[1]))

## players.16.17 <- data.frame(player.names.16.17, player.ids.16.17)
## players.16.17$player.ids <- as.character(players.16.17$player.ids)

## player.urls.16.17 <- paste0("https://www.basketball-reference.com/players/",
##                      substr(player.ids.16.17,1,1), "/",
##                      player.ids.16.17,
##                      ".html")

## # Create Data-Frame
## # 2016-17
## rm(locations.df.16.17)
## for (url in player.urls.16.17) {
##     print(url)

##     h <- read_html(url)

##     totals <- h %>% html_nodes(xpath = '//comment()') %>%    # select comment nodes
##         html_text() %>%    # extract comment text
##         paste(collapse = '') %>%    # collapse to a single string
##         read_html() %>%    # reparse to HTML
##         html_node('table#totals') %>%    # select the desired table
##         html_table()

##     advanced <- h %>% html_nodes(xpath = '//comment()') %>%    # select comment nodes
##         html_text() %>%    # extract comment text
##         paste(collapse = '') %>%    # collapse to a single string
##         read_html() %>%    # reparse to HTML
##         html_node('table#advanced') %>%    # select the desired table
##         html_table()

##     shooting <- h %>% html_nodes(xpath = '//comment()') %>%    # select comment nodes
##         html_text() %>%    # extract comment text
##         paste(collapse = '') %>%    # collapse to a single string
##         read_html() %>%    # reparse to HTML
##         html_node('table#shooting') %>%    # select the desired table
##         html_table()

##     ftp.16.17.games.minutes <- totals[totals$Season == "2016-17",c("G","MP","FT%")][1,]
##     ftr.16.17 <- advanced[advanced$Season == "2016-17",c("FTr")][1]
##     shooting.16.17 <- shooting[shooting[,1] == "2016-17",c(11:15,17:21)][1,]
##     colnames(shooting.16.17) <- c("perc.0.3","perc.3.10","perc.10.16","perc.16.3","perc.3",
##                                   "0.3.perc","3.10.perc","10.16.perc","16.3.perc","3.perc")

##     stats <- cbind(url,ftp.16.17.games.minutes,ftr.16.17,shooting.16.17)

##     if(!exists("locations.df.16.17")) {
##         locations.df.16.17 <- stats
##     } else {
##         locations.df.16.17 <- rbind(locations.df,stats)
##     }
## }

## # Clean Data-Frame
## # Merge
## # 2016-17
## locations.df.16.17$url <- as.character(locations.df.16.17$url)
## locations.df.16.17$player.id <- substr(locations.df.16.17$url,48,nchar(locations.df.16.17$url)-5)
## locations.df.16.17 <- merge(locations.df.16.17, players.16.17, by.x="player.id", by.y="player.ids")

## stats.df.16.17 <- merge(players.advanced.16.17[,c("Player","Pos","TS.","USG.")],locations.df.16.17,by.x="Player",by.y="player.names.16.17")

## for (i in c(3:4,7:20)) {
##     stats.df.16.17[,i] <- as.numeric(stats.df.16.17[,i])
## }
## # Limit Minutes
## stats.df.16.17 <- stats.df.16.17[stats.df.16.17$MP >= 500,]






